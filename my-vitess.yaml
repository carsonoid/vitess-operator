---
# To keep the example workload to a minimum, a single
# topology server is used for the local and global scope
# This is fine in small installations but may not be
# ideal for large, multi-zone installations
apiVersion: etcd.database.coreos.com/v1beta2
kind: EtcdCluster
metadata:
  name: etcd-zone1
spec:
  pod:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                etcd_cluster: etcd-vitess
            topologyKey: kubernetes.io/hostname
          weight: 100
    resources:
      requests:
        cpu: 200m
        memory: 100Mi
  repository: quay.io/coreos/etcd
  size: 1
  version: 3.3.10
---
# Sample VitessCluster with all resources embedded within
# the VitessCluster object. It is also possible to split
# all or some of the resources into their own objects for easier
# management. See the examples directory for more information
apiVersion: vitess.io/v1alpha2
kind: VitessCluster
metadata:
  name: vt
  labels:
    app: vitess
spec:
  lockserver:
    metadata:
      name: global
    spec:
      type: etcd2
      etcd2:
        address: etcd-global-client:2379
        pathPrefix: /vitess/global
  cells:
  - metadata:
      name: zone1
    spec:
      lockserver:
        metadata:
          name: zone1
        spec:
          type: etcd2
          etcd2:
            address: etcd-zone1-client:2379
            pathPrefix: /vitess/zone1
      defaults:
        replicas: 1
        image: vitess/vttablet:helm-1.0.4
  keyspaces:
  - metadata:
      name: unsharded-dbname
    spec:
      shards:
      - metadata:
          name: "0"
        spec:
          defaults:
            replicas: 2
            containers:
              mysql:
                image: percona:5.7.23
              vttablet:
                image: vitess/vttablet:helm-1.0.4
          tablets:
          - metadata:
              name: zone1
            spec:
              cellID: zone1
              tabletID: 101
              type: replica
  - metadata:
      name: sharded-dbname
    spec:
      shards:
      - metadata:
          name: "x-80"
        spec:
          keyRange: { to: "80" }
          defaults:
            replicas: 2
            containers:
              mysql:
                image: percona:5.7.23
              vttablet:
                image: vitess/vttablet:helm-1.0.4
          tablets:
          - metadata:
              name: zone1
            spec:
              cellID: zone1
              tabletID: 102
              type: replica
      - metadata:
          name: "80-x"
        spec:
          keyRange: { from: "80" }
          defaults:
            replicas: 2
            containers:
              mysql:
                image: percona:5.7.23
              vttablet:
                image: vitess/vttablet:helm-1.0.4
          tablets:
          - metadata:
              name: zone1
            spec:
              cellID: zone1
              tabletID: 103
              type: replica
